# ----------------------------------------------------------------------------
#  Copyright (c) 2018 WSO2, Inc. http://www.wso2.org
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
# ----------------------------------------------------------------------------

wso2_group: wso2
wso2_user: wso2carbon
product_name: wso2am
product_version: 2.1.0
target: /mnt
product_package_location: files
backup_dir: /tmp
misc_file_location: "{{ product_package_location }}/misc"
misc_file_copy_location: "{{ target }}/misc"
security_file_location: "{{ product_package_location }}/security"
jdbc_driver: mysql-connector-java-5.1.49.jar
java_xms: 256
java_xmx: 1024
java_max_perm_size: 256
qpid_heartbeat_delay: 30

# Set backup_enabled to true to backup <carbon-home>/repository/deployment/server directory
backup_enabled: false

# Performance tuning configurations
enable_performance_tuning: false
performance_tuning_file_list:
  - { src: '{{ product_package_location }}/system/etc/sysctl.conf',
      dest: '/etc/sysctl.conf' }
  - { src: '{{ product_package_location }}/system/etc/security/limits.conf',
      dest: '/etc/security/limits.conf' }

# If custom keystores and trsustrores are need to be added, uncomment the below list
# Add the required files under files/security/<product-home>/<path-to-file>
# A sample is given below
# security_file_list:
#   - { src: '{{ security_file_location }}/wso2am/client-truststore.jks',
#       dest: '{{ carbon_home }}/repository/resources/security/client-truststore.jks' }
#   - { src: '{{ security_file_location }}/wso2am/wso2carbon.jks',
#       dest: '{{ carbon_home }}/repository/resources/security/wso2carbon.jks' }

# Uncomment and add any miscellaneous files you need to copy
# A sample is given below
# misc_file_list:
#   - { src: '{{ misc_file_location }}/apimcli.zip',
#       dest: '{{ misc_file_copy_location }}/apimcli.zip' }

# Set the location the product packages should reside in (eg: "local" in the /files directory, "remote" in a remote location)
pack_location: local
#pack_location: remote
#remote_jdk: "<URL_TO_JDK_FILE>"
#remote_pack: "<URL_TO_APIM_PACK>"

# JDK Distributions
ORACLE_JDK8:
  jdk_file_name: WSO2_JDK_FILE_NAME
ADOPT_OPEN_JDK8:
  jdk_file_name: WSO2_JDK_FILE_NAME


java_dir: /opt
java_symlink: "{{ java_dir }}/java"
java_home: "{{ java_dir }}/{{ jdk_file_name }}"

# Enable analytics for API Manager
analytics_enabled: false
# Server URL of the remote StreamProcessor server used to collect statistics. Must be specified in
# protocol://hostname:port/ format.
DAS_url: "{tcp://localhost:7612}"
DAS_username: ${admin.username}
DAS_password: ${admin.password}
DAS_rest_api_url: https://localhost:9444
DAS_rest_api_username: ${admin.username}
DAS_rest_api_password: ${admin.password}

# Server URL of the Authentication service. Make sure to import the Key Manager's public certificate to WSO2 API-M's
# client-truststore.jks. For more information, see https://docs.wso2.com/display/ADMIN44x/Creating+New+Keystores
key_manager_server_url: https://localhost:${mgt.transport.https.port}${carbon.context}services/

# API key validator configuration used by API key manager (IS), API store and API gateway. API gateway uses it to
# validate and authenticate users against the provided API keys.
# Configurations related to enable thrift support for key-management related communication. If you want to switch back
# to Web Service Client, change the value of "KeyValidatorClientType" to "WSClient".
# In a distributed environment;
#  -If you are at the Gateway node, you need to point "ThriftClientPort" value to the "ThriftServerPort" value given at
#   KeyManager node.
#  -If you need to start two API Manager instances in the same machine, you need to give different ports to
#   "ThriftServerPort" value in two nodes.
#  -ThriftServerHost - Allows to configure a hostname for the thrift server. It uses the carbon hostname by default.
#  -The Gateway uses this parameter to connect to the key validation thrift service.
# These changes should be applied to roles/apim/templates/carbon-home/repository/conf/api-manager.xml.j2 file.
thrift_server_host: localhost

# API Store related configurations
api_store_url: https://localhost:${mgt.transport.https.port}/store
api_store_server_url: https://localhost:${mgt.transport.https.port}${carbon.context}services/

# API Publisher related configurations
api_publisher_url: https://localhost:${mgt.transport.https.port}/publisher

api_resource_url: http://localhost:9764/resource
api_resource_provider: admin

# Gateway configurations
gateway_environments:
  - { type: 'hybrid',
      name: 'Production and Sandbox',
      description: 'This is a hybrid gateway that handles both production and sandbox token traffic.',
      server_url: 'https://localhost:${mgt.transport.https.port}${carbon.context}services/',
      gateway_endpoint: 'http://${carbon.local.ip}:${http.nio.port},https://${carbon.local.ip}:${https.nio.port}',
      gateway_ws_endpoint: 'ws://${carbon.local.ip}:9099' }

# Traffic Manager configurations
data_publisher_receiver_url: tcp://${carbon.local.ip}:${receiver.url.port}
data_publisher_auth_url: ssl://${carbon.local.ip}:${auth.url.port}

# Datasource configurations 
# h2db:
#   db_driver: org.h2.Driver
#   db_username: wso2carbon
#   db_password: wso2carbon
#   db_validation_query: SELECT 1

#   wso2am_db_url: jdbc:h2:repository/database/WSO2AM_DB;DB_CLOSE_ON_EXIT=FALSE
#   wso2um_db_url: jdbc:h2:repository/database/WSO2CARBON_DB;DB_CLOSE_ON_EXIT=FALSE
#   wso2reg_db_url: jdbc:h2:repository/database/REGISTRY_DB;DB_CLOSE_ON_EXIT=FALSE

mysql:
  jdbc_driver: mysql-connector-java-5.1.49.jar
  db_driver_name: com.mysql.jdbc.Driver 
  db_password: RDS_PWD # TODO sed from cloudformation yaml
  db_validation_query: SELECT 1

  am_db_username: RDS_USERNAME
  um_db_username: RDS_USERNAME
  reg_db_username: RDS_USERNAME

  am_db_url: jdbc:mysql://WSO2AM_DB_ADDRESS:3306/WSO2AM_APIMGT_DB?autoReconnect=true&amp;useSSL=false
  um_db_url: jdbc:mysql://WSO2AM_DB_ADDRESS:3306/WSO2AM_COMMON_DB?autoReconnect=true&amp;useSSL=false
  reg_db_url: jdbc:mysql://WSO2AM_DB_ADDRESS:3306/WSO2AM_COMMON_DB?autoReconnect=true&amp;useSSL=false

postgres:
  db_driver_name: org.postgresql.Driver
  db_password: RDS_PWD
  db_validation_query: SELECT 1; COMMIT

  am_db_username: RDS_USERNAME
  um_db_username: RDS_USERNAME
  reg_db_username: RDS_USERNAME

  am_db_url: jdbc:postgresql://WSO2AM_DB_ADDRESS:5432/WSO2AM_APIMGT_DB
  um_db_url: jdbc:postgresql://WSO2AM_DB_ADDRESS:5432/WSO2AM_COMMON_DB
  reg_db_url: jdbc:postgresql://WSO2AM_DB_ADDRESS:5432/WSO2AM_COMMON_DB

sqlserver:
  db_driver_name: com.microsoft.sqlserver.jdbc.SQLServerDriver
  db_password: RDS_PWD
  db_validation_query: SELECT 1; COMMIT

  am_db_username: RDS_USERNAME
  um_db_username: RDS_USERNAME
  reg_db_username: RDS_USERNAME

  am_db_url: jdbc:sqlserver://WSO2AM_DB_ADDRESS:1433;databaseName=WSO2AM_APIMGT_DB;SendStringParametersAsUnicode=false
  um_db_url: jdbc:sqlserver://WSO2AM_DB_ADDRESS:1433;databaseName=WSO2AM_COMMON_DB;SendStringParametersAsUnicode=false
  reg_db_url: jdbc:sqlserver://WSO2AM_DB_ADDRESS:1433;databaseName=WSO2AM_COMMON_DB;SendStringParametersAsUnicode=false

oracle:
  db_driver_name: oracle.jdbc.OracleDriver
  db_password: RDS_PWD
  db_validation_query: SELECT 1 FROM DUAL

  am_db_username: WSO2AM_APIMGT_DB
  um_db_username: WSO2AM_COMMON_DB
  reg_db_username: WSO2AM_COMMON_DB

  am_db_url: jdbc:oracle:thin:@WSO2AM_DB_ADDRESS:1521/SID # TODO get oracle_sid from cfn << look into how  oracle works
  um_db_url: jdbc:oracle:thin:@WSO2AM_DB_ADDRESS:1521/SID
  reg_db_url: jdbc:oracle:thin:@WSO2AM_DB_ADDRESS:1521/SID
  
wso2am_db_driver: "{{ vars[db_type].db_driver_name }}"
wso2am_db_url: "{{ vars[db_type].am_db_url }}"
wso2am_db_username: "{{ vars[db_type].am_db_username }}"
wso2am_db_password: "{{ vars[db_type].db_password }}"
wso2am_db_validation_query: "{{ vars[db_type].db_validation_query }}"

wso2um_db_driver: "{{ vars[db_type].db_driver_name }}"
wso2um_db_url: "{{ vars[db_type].um_db_url }}"
wso2um_db_username: "{{ vars[db_type].um_db_username }}"
wso2um_db_password: "{{ vars[db_type].db_password }}"
wso2um_db_validation_query: "{{ vars[db_type].db_validation_query }}"

wso2reg_db_driver: "{{ vars[db_type].db_driver_name }}"
wso2reg_db_url: "{{ vars[db_type].reg_db_url }}"
wso2reg_db_username: "{{ vars[db_type].reg_db_username }}"
wso2reg_db_password: "{{ vars[db_type].db_password }}"
wso2reg_db_validation_query: "{{ vars[db_type].db_validation_query }}"

# Key Store and Trust Store configuration
key_store_location: repository/resources/security/wso2carbon.jks
key_store_password: wso2carbon
key_store_key_password: wso2carbon
key_store_key_alias: wso2carbon
trust_store_location: repository/resources/security/client-truststore.jks
trust_store_password: wso2carbon

# The KeyStore which is used for encrypting/decrypting internal data. This block is read by Carbon Crypto Service
internal_keystore_location: ${carbon.home}/repository/resources/security/wso2carbon.jks
internal_keystore_key_password: wso2carbon
internal_keystore_password: wso2carbon
internal_keystore_key_alias: wso2carbon

# Add any new changes you want to add for the group/profile below.
# If you add a new file under templates and parameterized the file, the values for those parameters should be added
# below. An example is provided below.
# Changes applied to axis2.xml file.
# clustering_enable: false
